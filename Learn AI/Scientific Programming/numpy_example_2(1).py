# -*- coding: utf-8 -*-
"""numpy_example_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rZOqpSXrGmbxAgx2tGwB-IBcPwxBEZSI

Given an m$×$n matrix A and and 1$×$n vector v, subtract v from every row of A.

---
"""

import numpy as np
import numpy.matlib

A = np.ones((5,5))
B = np.zeros((5,5))
C = np.zeros((5,5))
D = np.zeros((5,5))
v = np.arange(5)
(m, n) = A.shape

for i in range(m):
  B[i,:] = A[i,:] - v

C = A - np.matlib.repmat(v,5,1)

D = A - v

print(A)
print(v)
print(D)

"""Given an m × n matrix A, create a matrix B of the same size containing all zeros, and then copy into B the elements of A that are greater than zero"""

A = np.array([[-1, 5, 4], [-4, 6, -9], [0, 2, -4]])
(m, n) = A.shape
B = np.zeros_like(A)
C = np.zeros_like(A)

for i in range(m):
  for j in range(n):
    if A[i, j] > 0:
      B[i, j] = A[i, j]

C[A>0] = A[A>0]

print(A)
print(C)

"""Given a 1$\times$n vector v, create a vector w of the same size containing all zeros, sum up every two consecutive terms of v and then write into w"""

v = np.array([10, 30, 50, 40, 20])
#             -   10  30  50  40
w = np.zeros_like(v)
u = np.zeros_like(v)
n = v.size
print(n)
#        w = [40 80 90 60 0]
for i in range(n-1):
  w[i] = v[i] + v[i+1]
print(w)

u[:-1] = v[1:] + v[:-1]
print(u)